//
// Created by admin on 2016/9/8.
//
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "NetInterface.h"
#include <stdio.h>
/* Header for class com_example_admin_peacezone_JniTest */

#ifndef _Included_com_example_admin_peacezone_JniTest
#define _Included_com_example_admin_peacezone_JniTest
#ifdef __cplusplus
extern "C" {
#endif

/*
* Class:     com_example_admin_peacezone_JniTest
* Method:    CreateServer
* Signature: (II)I
*/
JNIEXPORT jint JNICALL Java_com_example_admin_peacezone_JniTest_CreateServer
        (JNIEnv * env, jobject obj, jint bindPort, jint MaxConnectCount){
        CreateServer( bindPort, MaxConnectCount);
}

char * Jstring2CStr(JNIEnv* env, jstring jstr)
{
        char* rtn = NULL;
        jclass clsstring = env->FindClass("java/lang/String");
        jstring strencode = env->NewStringUTF("GB2312");
        jmethodID mid = env->GetMethodID(clsstring, "getBytes", "(Ljava/lang/String;)[B");
        jbyteArray barr = (jbyteArray)env->CallObjectMethod(jstr,mid,strencode);
        jsize alen = env->GetArrayLength(barr);
        jbyte* ba = env->GetByteArrayElements(barr,JNI_FALSE);
        if(alen > 0)
        {
                rtn = (char*)malloc(alen+1); //new char[alen+1];
                memcpy(rtn,ba,alen);
                rtn[alen]=0;
        }
        env->ReleaseByteArrayElements(barr,ba,0);
        return rtn;
}

/*
 * Class:     com_example_admin_peacezone_JniTest
 * Method:    CreateClient
 * Signature: (CI)C
 */
JNIEXPORT jchar JNICALL Java_com_example_admin_peacezone_JniTest_CreateClient
        (JNIEnv * env, jobject obj, jstring svrIp, jint svrPort){
        char * cIp=Jstring2CStr(env,svrIp);
        CreateClient(cIp,svrPort);

}





/*
 * Class:     com_example_admin_peacezone_JniTest
 * Method:    SetCallFunc
 * Signature: (CIJICLjava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_example_admin_peacezone_JniTest_SetCallFunc
        (JNIEnv * env, jobject obj, jchar dataBuf, jint dataSize, jlong srcIP, jint srcPort, jchar dataType,
         void * sender, void * handle){

}





/*
 * Class:     com_example_admin_peacezone_JniTest
 * Method:    SendData
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_example_admin_peacezone_JniTest_SendData
        (JNIEnv * env, jobject obj, jstring netHandle , jstring data, jint dataSize){
        SendData(netHandle,data,dataSize);
}

/*
 * Class:     com_example_admin_peacezone_JniTest
 * Method:    FreeNet
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_example_admin_peacezone_JniTest_FreeNet
        (JNIEnv * env, jobject obj, jstring NetHandle);



#ifdef __cplusplus
}
#endif
#endif


